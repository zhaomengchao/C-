//有一个排过序的数组，包含n个整数，但是这个数组向左进行了一定长度的移位，
//例如，原数组为[1,2,3,4,5,6]，向左移位5个位置即变成了[6,1,2,3,4,5],
//现在对于移位后的数组，需要查找某个元素的位置。请设计一个复杂度为log级别的算法完成这个任务。

class Finder {
public:
    int findElement(vector<int> A, int n, int x) {
    int left = 0, right = n-1;
        while(left <= right)
        {
            int mid = (left + right)/2;
            
            if(A[mid] == x)
                return mid;
            if(A[left] < A[mid])
            {
	//判断x是否在这个区间
                if(A[left] <= x && x < A[mid])
                    right = mid-1;
                else
                    left = mid+1;
            }
            else
            {
                if(A[mid] < x && x <= A[right])
                    left = mid+1;
                else
                    right = mid-1;
            }
        }
        
        return -1;
    }
};